version: '3.6'
services:
  app:
    build:
      dockerfile: Dockerfile
      target: base
    command: npm run dev
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - DB_HOST=database
      - DB_USER=postgres
      - DB_PWD=password
      - DB_DATABASE=local_test
    depends_on:
      db-setup:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    env_file:
      - .env.compose
    ports:
      - "3000:3000"
  db-setup:
    build:
      context: ./scripts/db_setup/
    environment:
      - DATABASE_URL=postgres://postgres:password@database/local_test
    command: npx prisma migrate dev
    depends_on:
      - database
  app-worker:
    build:
      dockerfile: Dockerfile.apps
      args:
        APP_NAME: dashboard-worker
    ports:
      - "3001:3000"
    env_file:
      - .env.compose
    environment:
      - PG_BOSS_DB_URL=postgres://postgres:password@database/local_test
      - DB_HOST=database
      - DB_USER=postgres
      - DB_PWD=password
      - DB_DATABASE=local_test
    depends_on:
      - database
  app-proxy:
    build:
      dockerfile: ./scripts/local_proxy/Dockerfile
      context: ${PWD}
    depends_on:
      app:
        condition: service_healthy
    ports:
      - "443:443"
      - "8080:8080"
    volumes:
      - ./dev.key:/etc/ssl/private/dev.key
      - ./devcert.pem:/etc/ssl/certs/devcert.pem
  database:
    image: postgres:15
    ports:
    - "5432:5432"
    restart: always
    volumes:
    - database_data:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: local_test
volumes:
  database_data:
